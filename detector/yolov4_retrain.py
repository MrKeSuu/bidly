# -*- coding: utf-8 -*-
"""bidly-yolov4-retrain

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BdVTQp14EqSSY-lxNp2GdOjewUwntKUo
"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

def imShow(path):
    image = cv2.imread(path)
    height, width = image.shape[:2]
    resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

    fig = plt.gcf()
    fig.set_size_inches(24, 16)
    plt.axis("off")
    plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
    plt.show()

"""## Mounting Google Drive locally
...

This only supports reading, writing and moving files; ...
"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)
# drive._mount('/content/drive')

"""## Prep Data"""

!cp /content/drive/MyDrive/A-bidly/obj.zip ../
!cp /content/drive/MyDrive/A-bidly/test.zip ../
!unzip ../obj.zip
!unzip ../test.zip

!ls data/train/*.jpg | shuf -n 5
imShow('data/train/026656395.jpg')
# *ideally: each jpg should contain cards with identical size

"""## Prep yolo config"""

!mkdir -p cfg
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/yolov4-obj.cfg ./cfg/
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/yolov4-obj-test.cfg ./cfg/

!mkdir -p data
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/obj.names ./data/
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/obj.data ./data/
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/train.txt ./data/
!cp /content/drive/MyDrive/A-bidly/yolov4-cfg/test.txt ./data/

"""# Build yolo"""

# !git clone https://github.com/AlexeyAB/darknet
!cp /content/drive/MyDrive/A-bidly/yolov4-darknet.zip .
!unzip yolov4-darknet.zip

# Commented out IPython magic to ensure Python compatibility.
# change makefile to have GPU and OPENCV enabled
# %cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile
# verify CUDA
!/usr/local/cuda/bin/nvcc --version

# make darknet
!make

"""## quick verification"""

# %cd /content/darknet
# !wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights
# !./darknet detector test cfg/coco.data cfg/yolov4.cfg yolov4.weights data/horses.jpg -dont_show
# imShow('predictions.jpg')

"""# Re-train yolo for bidly"""

# !head -n40 cfg/yolov4-obj.cfg

# Commented out IPython magic to ensure Python compatibility.
# pre-trained weights
# !wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137
# %cd /content
!./darknet/darknet detector train \
    data/obj.data cfg/yolov4-obj.cfg \
     /content/drive/MyDrive/A-bidly/yolov4-backup/yolov4-obj_last.weights \
    -dont_show -map

imShow('chart.png')

"""Paste the following code into your console window and hit **Enter**
```
function ClickConnect(){
console.log("Working"); 
document
  .querySelector('#top-toolbar > colab-connect-button')
  .shadowRoot.querySelector('#connect')
  .click() 
}
setInterval(ClickConnect,60000)
```
Looks like this, it will click the screen every 10 minutes so that you don't get kicked off for being idle! HACKS!

## Test with deals
"""

# Commented out IPython magic to ensure Python compatibility.
# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets accuracy that detection must be in order to show it)
# %cd /content/darknet/

# to ensure yolo can load label files
! cp ../data/obj.data data/
! cp ../data/obj.names data/
! cp ../cfg/yolov4-obj-test.cfg cfg/
# temp increase test network size, otherwise only good for: 8th - 64thf
# ! sed -i 's/width=1600/width=2080/' cfg/yolov4-obj-test.cfg
# ! sed -i 's/height=1600/height=2080/' cfg/yolov4-obj-test.cfg

! ./darknet detector test \
    data/obj.data \
    cfg/yolov4-obj-test.cfg \
    /content/drive/MyDrive/A-bidly/yolov4-backup/yolov4-obj_best.weights \
    /content/drive/MyDrive/A-bidly/deal-images/deal2-md-sq.jpg \
    -thresh 0.3 -ext_output -dont_show -out result.json

imShow('predictions.jpg')

# !mv predictions.jpg /content/drive/MyDrive/A-bidly/deal-images/predictions-deal2-sm-1920-4x3.jpg

!cat result.json

"""## Unmount google drive"""

drive.flush_and_unmount()
print('All changes made in this colab session should now be visible in Drive.')